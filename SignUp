package com.example.bigdeal;

import android.app.Activity;
import android.content.Intent;
import android.database.Cursor;
import android.graphics.Color;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnFocusChangeListener;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.Toast;

public class SignUp extends Activity {
	EditText username;
	EditText password;
	EditText confirmpassword;
	EditText securityans;
	EditText shopname;
	EditText add1;
	EditText add2;
	EditText city;
	EditText state;
	EditText pincode;
	String address;
	String emailid;
	Spinner spCategory;
	Spinner spQuestion;
	MSdatabase database;
	EditText email;
	TextView txt1,txt2,txt3,txt4;
	Button signup;
	int user_flag,pass_flag,shop_flag,email_flag;
	

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_sign_up);
        
        signup=(Button)findViewById(R.id.button1);
        
        database= new MSdatabase(getApplicationContext());
        
        username=(EditText)findViewById(R.id.editText1);
        
        email=(EditText)findViewById(R.id.editText12);
        
        password=(EditText)findViewById(R.id.editText2);
        
        confirmpassword=(EditText)findViewById(R.id.editText3);
        
        securityans=(EditText)findViewById(R.id.editText4);
        
        shopname=(EditText)findViewById(R.id.editText6);
        
        add1=(EditText)findViewById(R.id.editText7);
        
        add2=(EditText)findViewById(R.id.editText8);
        
        city=(EditText)findViewById(R.id.editText9);
        
        state=(EditText)findViewById(R.id.editText10);
        
        pincode=(EditText)findViewById(R.id.editText11);
        
        txt1 = (TextView)findViewById(R.id.textView13);
        txt2 = (TextView)findViewById(R.id.textView14);
        txt3 = (TextView)findViewById(R.id.textView15);
        txt4 = (TextView)findViewById(R.id.textView16);
                
        Log.i("data",add1.getText().toString());
        
        
        database=new MSdatabase(getApplicationContext());
        
        spQuestion=(Spinner)findViewById(R.id.spinner2);
        
        ArrayAdapter<CharSequence> adapter1 =ArrayAdapter.createFromResource(this, R.array.Questions, android.R.layout.simple_spinner_item);
        
        adapter1.setDropDownViewResource(android.R.layout.simple_dropdown_item_1line);
        
        spQuestion.setAdapter(adapter1);
        
        
        username.setOnFocusChangeListener(new OnFocusChangeListener() {
			
			@Override
			public void onFocusChange(View arg0, boolean arg1) 
			{
				int i=0;
				/*if(username.getText().length() == 0)
				{
					txt1.setTextColor(Color.BLACK);
					txt1.setText("Username cannot be left blank");				
				}
				else*/
				if(username.getText().length() != 0)
				{
					database.open();
					Cursor user_cursor=database.signup_getAllEntries();				      
					database.close();
					
				     if(user_cursor.moveToFirst())
				     {
				    	 do
				    	 {
				    		 if((user_cursor.getString(0)).equals(username.getText().toString()))
				    		 {
				    			 txt1.setTextColor(Color.RED);
				    			 txt1.setText("	Username is not available");
				    			 user_flag++;
				    			 break;
				    		 }
				    		 else
				    		 { 
				    			 i++;
				    			 continue;
				    		 }
				        			
				    	 }	while(user_cursor.moveToNext());
				     }
				     if(user_cursor.getCount()==i)
				     {
				    	 txt1.setTextColor(Color.GREEN);
				    	 txt1.setText("	Username is available");
				    	 user_flag=0;
				     } 	
				}
			}
		});
        
        password.setOnFocusChangeListener(new OnFocusChangeListener() {
			
        	
			@Override
			public void onFocusChange(View arg0, boolean arg1) 
			{   							
				/*if(password.getText().length() == 0)
				{
					//txt1.setTextColor(Color.BLACK);
					txt2.setText("Password cannot be left blank");					
				}
				else*/
				{
					int flagNum = 0, flagAlphaUpp = 0,flagAlphaLow = 0, flagSpl = 0, flagLen = 0;
					String pass = password.getText().toString();
					char temp[] = pass.toCharArray();
					for (int i = 0; i < temp.length; i++) 
					{
						if (Character.isDigit(temp[i])) 
						{
							flagNum = 1;
						}
						else if (Character.isLetter(temp[i])) 
						{
							char a = temp[i];
							int c = (int)a;
							if(c>=65 && c<=90)
							{
							  flagAlphaUpp = 1;
							}
							else if(c>=97 && c<=122)
							{
								flagAlphaLow = 1;
							}
						} 
						else 
						{
							flagSpl = 1;
						}
					}
					if (pass.length() >= 8 && pass.length() <= 20) 
					{
						flagLen = 1;
					}
					txt2.setTextColor(Color.RED)	;				
					//display in text field
					if(flagLen !=1)
					{
						pass_flag++;
						txt2.setText("Password should have a minimum length of 8");
					}
					else if(flagNum !=1)
					{
						pass_flag++;
						txt2.setText("Password should have atleast one number");
					}
					else if(flagSpl !=1)
					{
						pass_flag++;
						txt2.setText("Password should have atleast one special character");
					}
					else if(flagAlphaUpp !=1)
					{
						pass_flag++;
						txt2.setText("Password should have atleast one Uppercase letter");						
					}
					else if(flagAlphaLow !=1)
					{
						pass_flag++;
						txt2.setText("Password should have atleast one Lowercase letter");
					}
					else
					{
						pass_flag=0;
						txt2.setText("");
					}
				}
				
			}
		});
        
        shopname.setOnFocusChangeListener(new OnFocusChangeListener() {
			
			@Override
			public void onFocusChange(View arg0, boolean arg1)
			{
                		int j=0;		
				/*if(shopname.getText().length() == 0)
				{
					txt3.setText("Shopname cannot be left blank");					
				}
				else*/if(shopname.getText().length() != 0)
				{					
					database.open();
					Cursor shop_cursor=database.signup_getAllEntries();				      
					database.close();  
					if(shop_cursor.moveToFirst())
				     {
				    	 do
				    	 {
				    		 if((shop_cursor.getString(5)).equals(shopname.getText().toString()))
				    		 {
				    			 txt3.setTextColor(Color.RED);
				    			 txt3.setText("	Shop name already taken");
				    			 shop_flag++;
				    			 break;
				    		 }
				    		 else
				    		 { 
				    			 j++;
				    			 continue;
				    		 }
				        			
				    	 }	while(shop_cursor.moveToNext());
				     }
				     if(shop_cursor.getCount()==j)
				     {
				    	 shop_flag=0;
				    	 /*txt1.setTextColor(Color.GREEN);
				    	 txt1.setText("Shop name available");*/
				     } 	
				}
				
			}
		});
        
        
        email.setOnFocusChangeListener(new OnFocusChangeListener() {
			
			@Override
			public void onFocusChange(View arg0, boolean arg1) 
			{
               String emailid=email.getText().toString();	
               
            	   int x=emailid.indexOf('@');
            	   int y=emailid.lastIndexOf('.');
            
           		if (emailid.length()!=0) {
					if ((x == -1 || y == -1) || x > y) {
						email_flag++;
						txt4.setTextColor(Color.RED);
						txt4.setText("Email ID is invalid");
					} else {
						email_flag = 0;
						txt4.setTextColor(Color.GREEN);
						txt4.setText("");
					}
				}

               
				
				
				/* String emailid = email.getText().toString();	 
				 String regEx = "\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}\\b";
				 
				 Pattern p = Pattern.compile(regEx);
				 Matcher m = p.matcher(emailid);
				 
				 if(m.matches())
				 {
					 email_flag=0;
				 }
				 else
				 {
					 email_flag++;
					 txt4.setTextColor(Color.RED);
					 txt4.setText("Email ID is invalid");
				 }*/
				       
				   



			}
		});
        
        
        
        signup.setOnClickListener(new OnClickListener() {

			

			public void onClick(View arg0) {
				int count = 0;
                String pass1= password.getText().toString();
				String conpass1= confirmpassword.getText().toString();
                			
				if(username.getText().length() == 0)
				{
					Toast.makeText(SignUp.this,"Username cannot be left blank",Toast.LENGTH_SHORT).show();         
					count = count+1;
				}
				else if(password.getText().length() == 0)
				{
					Toast.makeText(SignUp.this,"Password cannot be left blank",Toast.LENGTH_SHORT).show();         
					count = count+1;
				}
				else if(confirmpassword.getText().length() == 0)
				{
					Toast.makeText(SignUp.this,"Please enter Password again",Toast.LENGTH_SHORT).show();         
					count = count+1;
				}
				else if(securityans.getText().length() == 0)
				{
					Toast.makeText(SignUp.this,"Security Answer cannot be left blank",Toast.LENGTH_SHORT).show();         
					count = count+1;
				}
				else if(shopname.getText().length() == 0)
				{
					Toast.makeText(SignUp.this,"Shopname cannot be left blank",Toast.LENGTH_SHORT).show();         
					count = count+1;
				}
				else if(add1.getText().length() == 0)
				{
					Toast.makeText(SignUp.this,"Address Line1 cannot be left blank",Toast.LENGTH_SHORT).show();         
					count = count+1;
				}
				else if(add2.getText().length() == 0)
				{
					Toast.makeText(SignUp.this,"Address Line1 cannot be left blank",Toast.LENGTH_SHORT).show();         
					count = count+1;
				}
				else if(city.getText().length() == 0)
				{
					Toast.makeText(SignUp.this,"Please enter City",Toast.LENGTH_SHORT).show();         
					count = count+1;
				}
				else if(state.getText().length() == 0)
				{
					Toast.makeText(SignUp.this,"Please enter State",Toast.LENGTH_SHORT).show();         
					count = count+1;
				}
				else if(pincode.getText().length() == 0)
				{
					Toast.makeText(SignUp.this,"Please enter Pincode",Toast.LENGTH_SHORT).show();         
					count = count+1;
				}
				else if(email.getText().length() == 0)
				{
					Toast.makeText(SignUp.this,"Email id not entered",Toast.LENGTH_SHORT).show();         
					count = count+1;
				}
				else if (!(pass1.equals(conpass1)))
				{
					Toast.makeText(SignUp.this,"Password and confirm Password do not match",Toast.LENGTH_SHORT).show();         
					count = count+1;					
				}
				else if (count == 0 && user_flag==0 && pass_flag==0 && shop_flag==0 && email_flag==0)
				{
					SignupBean signup=new SignupBean();
					signup.setUsername(username.getText().toString());
					signup.setPassword(password.getText().toString());
					
					address=add1.getText().toString() + ", " + add2.getText().toString() + ", " + city.getText().toString() + ", " + state.getText().toString() + ", " + pincode.getText().toString();
			        
					signup.setAddress(address);
					signup.setSecurity_Q(spQuestion.getSelectedItem().toString());
					signup.setAnswer(securityans.getText().toString());
					signup.setShopname(shopname.getText().toString());
					signup.setCity(city.getText().toString());
					signup.setState(state.getText().toString());
					signup.setEmail_Id(email.getText().toString());
					database.open();
					database.signup_insertEntry(signup);
					database.close();
					
					Intent intent=new Intent(SignUp.this,dealerHome.class);
					startActivity(intent);
				}			
			}
			
			
		});
    
    }
    
    
}
